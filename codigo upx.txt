#include <LiquidCrystal.h>

int rs = 5;
int en = 6;
int d4 = 7;
int d5 = 8;
int d6 = 9;
int d7 = 10;
int trigPin1 = 3;
int echoPin1 = 4;
int trigPin2 = 11;
int echoPin2 = 12;
int relay1 = 13;
int relay2 = 2;
int dlcd = 2000;
int sdel = 100;

// Variavel para calcular a distância

LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
void setup() {

  Serial.begin(9600);
  // Define the trigPin as an output and echoPin as an input
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);
  pinMode(relay1, OUTPUT);
  pinMode(relay2, OUTPUT);
  lcd.begin(16, 2);
  lcd.setCursor(3, 0);
  lcd.print("Wireless EV");
  delay(dlcd);
  lcd.setCursor(0, 0);
  lcd.print("Charging Station");
  delay(dlcd);
  lcd.clear();
}

void loop() {
  long duration1, distance1, duration2, distance2;
  lcd.setCursor(1, 0);
  lcd.print("Slot1");
  lcd.setCursor(9, 0);
  lcd.print("Slot2");
  // Measure distance from Sensor 1
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);
  duration1 = pulseIn(echoPin1, HIGH);
  distance1 = duration1 * 0.034 / 2;

  // Medir a distância do Sensor 2
  digitalWrite(trigPin2, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin2, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin2, LOW);
  duration2 = pulseIn(echoPin2, HIGH);
  distance2 = duration2 * 0.034 / 2;

  // Imprima as distâncias
  Serial.print("Distance from Sensor 1: ");
  Serial.print(distance1);
  Serial.println(" cm");
  Serial.print("Distance from Sensor 2: ");
  Serial.print(distance2);
  Serial.println(" cm");

  if ((distance1 <=5)) {
    digitalWrite(relay1, HIGH);
    lcd.setCursor(2, 1);
    lcd.print("Busy");
    delay(dlcd);
  } else if ((distance1 > 5)) {
    digitalWrite(relay1, LOW);
    lcd.setCursor(2, 1);
    lcd.print("N/B");
    delay(dlcd);
  }

  if ((distance2 <= 5)) {
    digitalWrite(relay2, HIGH);
    lcd.setCursor(10, 1);
    lcd.print("Busy");
    delay(dlcd);
  } else if ((distance2 > 5)) {
    digitalWrite(relay2, LOW);
    lcd.setCursor(10, 1);
    lcd.print("N/B");
    delay(dlcd);
  }

  // Aguarde um pequeno atraso antes de executar novamente
  delay(10);
}